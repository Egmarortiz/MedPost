"""Auth tables

Revision ID: 6b8fa98a857f
Revises: 86904ad00376
Create Date: 2025-10-17 19:06:14.917638

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6b8fa98a857f'
down_revision: Union[str, None] = '86904ad00376'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('WORKER', 'FACILITY', 'ADMIN', name='user_role'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('refresh_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token_hash', sa.String(length=128), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.Column('revoked_reason', sa.Text(), nullable=True),
    sa.Column('replaced_by_token_id', sa.UUID(), nullable=True),
    sa.Column('ip_address', sa.String(length=64), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['replaced_by_token_id'], ['refresh_tokens.id'], name=op.f('fk_refresh_tokens_replaced_by_token_id_refresh_tokens')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_refresh_tokens_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_refresh_tokens')),
    sa.UniqueConstraint('token_hash', name=op.f('uq_refresh_tokens_token_hash'))
    )
    op.create_index(op.f('ix_refresh_tokens_user_id'), 'refresh_tokens', ['user_id'], unique=False)
    op.create_table('auth_audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('event_type', sa.Enum('REGISTER', 'LOGIN', 'LOGOUT', 'REFRESH', name='auth_event_type'), nullable=False),
    sa.Column('ip_address', sa.String(length=64), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('refresh_token_id', sa.UUID(), nullable=True),
    sa.Column('detail', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['refresh_token_id'], ['refresh_tokens.id'], name=op.f('fk_auth_audit_logs_refresh_token_id_refresh_tokens'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_auth_audit_logs_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_auth_audit_logs'))
    )
    op.create_index(op.f('ix_auth_audit_logs_user_id'), 'auth_audit_logs', ['user_id'], unique=False)
    op.add_column('facilities', sa.Column('user_id', sa.UUID(), nullable=False))
    op.create_unique_constraint(op.f('uq_facilities_user_id'), 'facilities', ['user_id'])
    op.create_foreign_key(op.f('fk_facilities_user_id_users'), 'facilities', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('workers', sa.Column('user_id', sa.UUID(), nullable=False))
    op.create_unique_constraint(op.f('uq_workers_user_id'), 'workers', ['user_id'])
    op.create_foreign_key(op.f('fk_workers_user_id_users'), 'workers', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_workers_user_id_users'), 'workers', type_='foreignkey')
    op.drop_constraint(op.f('uq_workers_user_id'), 'workers', type_='unique')
    op.drop_column('workers', 'user_id')
    op.drop_constraint(op.f('fk_facilities_user_id_users'), 'facilities', type_='foreignkey')
    op.drop_constraint(op.f('uq_facilities_user_id'), 'facilities', type_='unique')
    op.drop_column('facilities', 'user_id')
    op.drop_index(op.f('ix_auth_audit_logs_user_id'), table_name='auth_audit_logs')
    op.drop_table('auth_audit_logs')
    op.drop_index(op.f('ix_refresh_tokens_user_id'), table_name='refresh_tokens')
    op.drop_table('refresh_tokens')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
